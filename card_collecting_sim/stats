#!/bin/bash
set -eu -o pipefail

data="out/stats.data"
prefix="out/stats"

function gpl_gen
{
  local title=$1
  local ox=$2
  local oy=$3
  local data_pos=$4
  local color=$5
  local surfix=$6
  shift 6
  {
    cat <<EOF
set terminal svg

set title  "$title" font "Times,20"
set xlabel "$ox"  font "Times,16"
set ylabel "$oy" font "Times,16

#set xrange [0:]
set yrange [0:]

unset key

plot "$data" using 1:$data_pos with lines lw 3 lc rgb "$color"
EOF
  } > "${prefix}_$surfix.gpl"

  echo "$0: plotting $title..."
  gnuplot "${prefix}_$surfix.gpl" > "${prefix}_$surfix.svg"
}

{
echo "# players  iteartions_for_99  total_cost_per_player  avg_cards_per_player"
for f in out/players_*.data
do
  n=$(sed 's#.*_0*\([0-9]\+\)\.data#\1#g' <<< "$f")
  #echo $n - $f
  read iteration _ sim_int total_cost avg_cards <<< "$(cat "$f" | tr '\t' ' ' | grep '^[0-9]\+ [0-9]\+ 99[0-9][0-9][0-9] ' | tr -d , | head -1)"
  #echo ">> $n $iteration $sim_int $total_cost $avg_cards"
  { bc -ql | tr '\n' '\t' ; } <<EOF
scale=2
$n
$iteration
$total_cost/$n
$avg_cards/$n
EOF
  echo
done
} | tee "$data"


gpl_gen "iterations to get 99% success rate" "number of players" "iterations" 2 "blue" "it_99"
gpl_gen "total cost per player" "number of players" "cost" 3 "red" "total_cost_pp"
gpl_gen "average cards per player" "number of players" "avg. cards count" 4 "cyan" "avg_cards_pp"
